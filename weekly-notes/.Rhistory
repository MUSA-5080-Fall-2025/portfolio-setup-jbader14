quarto render
render quarto
# Load the tidyverse library
library(tidyverse)
# Read in the car sales data
# Make sure the data file is in your lab_0/data/ folder
car_data <- read_csv("data/car_sales_data.csv")
View(car_data)
glimpse(car_data)
colnames(car_data)
# Use glimpse() to see the data structure
glimpse(car_data)
# Check the column names
colnames(car_data)
# Look at the first few rows
head(car_data)
# Look at the tibble version (what we have)
car_data
# Convert to regular data frame and display
car_df <- as.data.frame(car_data)
car_df
# Select just Model and Mileage columns
model_mile <- select(car_df, Model, Mileage)
head(model_mile, 5)
# Select Manufacturer, Price, and Fuel type
manuf_price_fuel <- select(car_df, Manufacturer, Price, "Fuel type")
head(manuf_price_fuel, 5)
# Challenge: Select all columns EXCEPT Engine Size
except_engine <- select(car_df, -"Engine size")
head(except_engine, 5)
# Rename 'Year of manufacture' to year
car_data <- rename(car_data, year_of_manufacture = "Year of manufacture")
# Check that it worked
names(car_data)
# Rename 'Year of manufacture' to year
car_data <- rename(car_data, year = "Year of manufacture")
# Rename 'Year of manufacture' to year
car_data <- rename(car_data, year = "year_of_manufacture")
# Check that it worked
names(car_data)
# Rename 'Year of manufacture' to year
# car_data <- rename(car_data, year = "year_of_manufacture")
car_data <- rename(car_data, fuel = "Fuel Type", engine_size = "Engine size")
# Rename 'Year of manufacture' to year
# car_data <- rename(car_data, year = "year_of_manufacture")
car_data <- rename(car_data, fuel = "Fuel Type")
# Rename 'Year of manufacture' to year
# car_data <- rename(car_data, year = "year_of_manufacture")
car_data <- rename(car_data, fuel = "Fuel type")
# Check that it worked
names(car_data)
# Rename 'Year of manufacture' to year
# car_data <- rename(car_data, year = "year_of_manufacture")
car_data <- rename(car_data, engine_size = "Engine size")
# Check that it worked
names(car_data)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- mutate(car_data, age = 2025 - year) |>
# Create a mileage_per_year column
mutate(car_data, mileage_per_year = Mileage / age)
# Look at your new columns
select(car_data, Model, year, age, Mileage, mileage_per_year)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- mutate(car_data, age = 2025 - year) |>
# Create a mileage_per_year column
round(mutate(car_data, mileage_per_year = Mileage / age), 2)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- mutate(car_data, age = 2025 - year) |>
# Create a mileage_per_year column
round(mutate(car_data, mileage_per_year = Mileage / age), digits = 2)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- mutate(car_data, age = 2025 - year) |>
# Create a mileage_per_year column
mutate(car_data, mileage_per_year = Mileage / age) |>
# Rounding for readability
rount(car_data$mileage_per_year, digits = 2)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- mutate(car_data, age = 2025 - year) |>
# Create a mileage_per_year column
mutate(car_data, mileage_per_year = Mileage / age) |>
# Rounding for readability
round(car_data$mileage_per_year, digits = 2)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- mutate(car_data, age = 2025 - year) |>
# Create a mileage_per_year column
mutate(car_data, mileage_per_year = Mileage / age)
# Look at your new columns
select(car_data, Model, year, age, Mileage, mileage_per_year)
# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)
car_data <- mutate(car_data, price_category = case_when(price < 15000 ~ "budget", 15000 <= price <= 30000 ~ "midrange", TRUE ~ "expensive"))
# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)
car_data <- car_data |>
mutate(price_category = case_when(
price < 15000 ~ "budget",
between(price, 15000, 30000) ~ "midrange",
TRUE ~ "expensive"))
car_data
# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)
car_data <- car_data |>
mutate(price_category = case_when(
Price < 15000 ~ "budget",
between(Price, 15000, 30000) ~ "midrange",
TRUE ~ "luxury"))
# Check your categories select the new column and show it
select(car_data, price_category)
car_data
# Find all Toyota cars
toyota <- car_data |>
filter(Manufacturer = "Toyota")
# Find all Toyota cars
toyota <- car_data |>
filter(Manufacturer == "Toyota")
head(toyota, 5)
# Find cars with mileage less than 30,000
mile_less_30000 <- car_data |>
filter(Mileage < 30000)
head(mile_less_30000, 5)
# Find luxury cars (from price category) with low mileage
# ASSUMING low mileage is less than 30000 from part 2
luxury_low_mile <- mile_less_30000 |>
filter(price_category == "luxury")
head(luxury_low_mile, 5)
# Find cars that are EITHER Honda OR Nissan
honda_nissan <- car_data |>
filter(Manufacturer == "Honda" | Manufacturer = "Nissan")
# Find cars that are EITHER Honda OR Nissan
honda_nissan <- car_data |>
filter(Manufacturer == "Honda" | Manufacturer == "Nissan")
head(honda_nissan, 5)
# Find cars with price between $20,000 and $35,000
price_20k_35k <- car_data |>
filter(Price < 20000 & Price > 35000)
head(price_20k_35k, 5)
# Find diesel cars less than 10 years old
diesel_less_10_year <- car_data |>
filter(fuel == "Diesel" & age < 10)
head(diesel_less_10_year, 5)
# Find cars that are EITHER Honda OR Nissan
honda_nissan <- car_data |>
filter(Manufacturer == "Honda" | Manufacturer == "Nissan")
head(honda_nissan, 5)
# Find cars with price between $20,000 and $35,000
price_20k_35k <- car_data |>
filter(Price > 20000 & Price < 35000)
head(price_20k_35k, 5)
# Find diesel cars less than 10 years old
diesel_less_10_year <- car_data |>
filter(fuel == "Diesel" & age < 10)
head(diesel_less_10_year, 5)
# Find cars that are EITHER Honda OR Nissan
honda_nissan <- car_data |>
filter(Manufacturer %in% c("Honda", "Nissan"))
head(honda_nissan, 5)
# Find cars with price between $20,000 and $35,000
price_20k_35k <- car_data |>
filter(Price > 20000 & Price < 35000)
head(price_20k_35k, 5)
# Find diesel cars less than 10 years old
diesel_less_10_year <- car_data |>
filter(fuel == "Diesel" & age < 10)
head(diesel_less_10_year, 5)
any(c("Honda", "Nissan") %in% car_data$Manufacturer)
# Find cars that are EITHER Honda OR Nissan
honda_nissan <- car_data |>
filter(Manufacturer %in% c("Honda", "Nissan"))
head(honda_nissan, 5)
# Find cars with price between $20,000 and $35,000
price_20k_35k <- car_data |>
filter(Price > 20000 & Price < 35000)
head(price_20k_35k, 5)
# Find diesel cars less than 10 years old
diesel_less_10_year <- car_data |>
filter(fuel == "Diesel" & age < 10)
head(diesel_less_10_year, 5)
glimpse(diesel_less_10_year)
# Calculate average price by manufacturer
avg_price_by_brand <- car_data %>%
group_by(Manufacturer) %>%
summarize(avg_price = mean(Price, na.rm = TRUE))
avg_price_by_brand
# Calculate average mileage by fuel type
avg_mile_by_fuel <- car_data |>
group_by(fuel) |>
summarize(avg_mile = mean(Mileage, na.rm = T))
avg_mile_by_fuel
# Count cars by manufacturer
count_cars_by_brand <- car_data |>
group_by(Manufacturer) |>
summarize(count_car = n())
count_cars_by_brand
# Frequency table for price categories
car_data |>
count(price_category) |>
mutate(percent = 100 * n / sum(n))
# Frequency table for price categories
car_data |>
count(price_category) |>
mutate(percent = 100 * n / sum(n))
select(price_category, percent)
# Frequency table for price categories
car_data |>
count(price_category) |>
mutate(percent = 100 * n / sum(n)) |>
select(-n)
# Load the tidyverse library
library(tidyverse)
# Read in the car sales data
# Make sure the data file is in your lab_0/data/ folder
car_data <- read_csv("scripts/data/car_sales_data.csv")
# Use glimpse() to see the data structure
glimpse(car_data)
# Check the column names
colnames(car_data)
# Look at the first few rows
head(car_data)
# Load the tidyverse library
library(tidyverse)
# Read in the car sales data
# Make sure the data file is in your lab_0/data/ folder
car_data <- read_csv("data/car_sales_data.csv")
# Load the tidyverse library
library(tidyverse)
# Read in the car sales data
# Make sure the data file is in your lab_0/data/ folder
car_data <- read_csv("data/car_sales_data.csv")
# Use glimpse() to see the data structure
glimpse(car_data)
# Check the column names
colnames(car_data)
# Look at the first few rows
head(car_data)
# Look at the tibble version (what we have)
car_data
# Convert to regular data frame and display
car_df <- as.data.frame(car_data)
car_df
# Select just Model and Mileage columns
model_mile <- select(car_df, Model, Mileage)
head(model_mile, 5)
# Select Manufacturer, Price, and Fuel type
manuf_price_fuel <- select(car_df, Manufacturer, Price, "Fuel type")
head(manuf_price_fuel, 5)
# Challenge: Select all columns EXCEPT Engine Size
except_engine <- select(car_df, -"Engine size")
head(except_engine, 5)
# Rename 'Year of manufacture' to year
car_data <- rename(car_data, year = "Year of manufacture") |>
rename(car_data, engine_size = "Engine size") |>
rename(car_data, fuel = "Fuel type")
# Rename 'Year of manufacture' to year
car_data <- car_data |>
rename(
year = `Year of manufacture`,
engine_size = `Engine size`,
fuel = `Fuel type`
)
# Check that it worked
names(car_data)
# Rename 'Year of manufacture' to year
car_data <- car_data |>
rename(
year = `Year of manufacture`,
engine_size = `Engine size`,
fuel = `Fuel type`
)
# Create an 'age' column (2025 minus year of manufacture)
car_data <- car_data |>
mutate(age = 2025 - year)
# Create a mileage_per_year column
mutate(mileage_per_year = Mileage / age)
car_data
