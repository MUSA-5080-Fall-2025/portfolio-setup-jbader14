---
title: "Week 1 Notes - Course Introduction"
date: "2025-09-08"
---

## Key Concepts Learned
- Upcoming assignments: lab0: 9/15 create Quatro portfolio; lab1: 9/27 EDA
- Git: Version-control system - tracks changes in files
  - Collaboration tool for people teams to work
- Github: cloud host for Git repos (projects)
  - Backup work in cloud
  - Share / collaborate on projects with other 
  - Github pages hosts websites
- Github Concepts:
  - Repo: folder containing proj files
  - Commit: snapshot of work at point in time
  - Push: Send changes to Github cloud
  - Pull: Get latest changes from Github cloud
- Workflow each week:
  - Edit files in RStudio (local)
  - Commit changes w/ message
  - Push to Github
  - Portfolio propogates changes automatically
- Github Classroom:
  - Creates individual repos for each student
  - Distributes assignments automatically
  - TAs can provide feedback
- Lists syntax
- Links / Images syntax


## Coding Techniques
- R (open software - people create packages free to use) and dplyr:
  - tidyverse: Data Science packages
    - Consistent syntax across functions
    - Readable code tells story
    - Efficient workflows for common tasks
  - Tibbles: enhanced data frames
    - Traditional df: class(data)
    - Tibble: car_data <- as_tibble(data)
    - Pretty print: Shows ONLY first 10 rows, displays cleaner than traditional df
    - read_csv (read.csv for traditional df)
  -  Essential dplyr functions (data cleaning):
    - select(): choose columns - select(df, col1, col2)
    - filter(): choose rows - filter(df, condition)
      - Use &, | symbol to join conditions (and/or)
    - mutate(): create new variables - mutate(df, new_col = old_col / 1000)
      - Can use case_when (if statement) argument: ex) car_df = mutate(car_df, case_when(age > 20 ~ "old", TRUE ~ "not old"))
    - summarize(): calculate stats
    - group_by(): operate on groups (usually goes together w/ summarize())
      - group_by(col1) |> summarize (n = n()) |> mutate(freq = n / sum(n)) -> calculates proportions (frequencies) for groups
    - Must assign back to original or new df name to save the operation (always start with dataframe operating on in syntax)
    - Others: 
      - names(): column names
      - glimpse(): rows, columnns, some entries etc.
      - Click on df to view in table format
      - Rename(): renames column: rename(df, new = old)
      - Remove a column: select(df, -col)
    - %>% or |>: Pipes -> combines lines of codes, pass outputs through each pipe
- Quarto (better version of R Markdown) - publishing system that combines:
  - Code (R, Python, etc.), Text (explanations, analysis, etc.), Output (plots, tables results, etc.)
  - Benefits:
    - Reproducible research: Ccde and explanation in one place, others can re-run analysis, professional presentation
  - Components:
    - YAML header: title, author, date, format
    - R code chunks: load library, read_csv, etc.
    - Text (formatting: bold, italic, etc.)

## Questions & Challenges
- Nothing!

## Connections to Policy
- We learned how to clean data, transforming it to drive actionable insights. Datasets can be messy, and by learning these skills, we build foundational knowledge on how we can improve the quality of data for future analyses.
- We learned how to create a Quarto portfolio as a professional way to organize and present our work. This is highly valuable for making our findings professional, clean, and easily accessible to peers, future employers, etc.

## Reflection
- I found the Quarto portfolio the most fascinating part of this lecture. It displays our work in a much cleaner format than in R-Markdown.
- I will be using this portfolio to highlight the work in this course. Additionally, I can use skills in making a Quatro portfolio for personal projects as well!
